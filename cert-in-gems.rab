= Do you trust that certificate?

# : subtitle
#    SUBTITLE
#: author
#   zunda
#: institution
#   Heroku/Support
# : content-source
#    RubyKaigi 2015
#: date
#   2015-12-12
: allotted-time
   5m
: theme
   lightning-talk-with-code

= @zundan
  # image
  # src = anmitsu.jpg
  # relative_height = 100

= @zundan
Salesforce / Heroku

= Important!
  # image
  # src = hyuki-cr3.jpg
  # relative_width = 100
= Introduction to modern cryptography

= Transport Layer Security
= Secure Socket Layer
= TLS/SSL
= https://

= Your web application
= Receive requests
= Call external resources

= To trust
= PKI
= Server certificate
= Certificate Authority
= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 AddTrust External CA Root

= One day
= Error
= Error
SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify

= I did not change anything!
= but
= Something outside has changed
= Error
SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify

= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 [NEW!] e.g. AddTrust External CA Root

= 2014-09 1024 bit hash
= 2015-09 SHA-1
= Replacing with new certs
= On new CA certs
= that
= the app does not know
= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 [???] e.g. AddTrust External CA Root

= So ...
= $ bundle update
= well ...
= Monkey patch
= App's own CA certs
= net/http
 # enscript ruby
 module Net
   class HTTP
     alias_method :original_use_ssl=, :use_ssl=
 
     def use_ssl=(flag)
       self.ca_file     = File.dirname(__FILE__) + \
         '/../../certs/cacert.pem'
       self.verify_mode = OpenSSL::SSL::VERIFY_PEER
       self.original_use_ssl = flag
     end
   end
 end

= ActiveMerchant
 # enscript ruby
 module ActiveMerchant
   class Connection
     def configure_ssl(http)
       return unless endpoint.scheme == "https"
       http.use_ssl = true
       if verify_peer
         http.verify_mode = OpenSSL::SSL::VERIFY_PEER
         http.ca_file     = File.dirname(__FILE__) + \
           '/../../certs/cacert.pem'
       else
         http.verify_mode = OpenSSL::SSL::VERIFY_NONE
       end
     end
   end
 end

= System's CA certs
= Where are they?
= System's certs
 # enscript sh
 $ openssl version -d
 OPENSSLDIR: "/usr/lib/ssl"

 $ ls /usr/lib/ssl
 certs@  misc/  openssl.cnf@  private@

 $ ls -l /usr/lib/ssl/certs
 ... /usr/lib/ssl/certs -> /etc/ssl/certs/

= openssl/ssl.rb
 # enscript ruby
 module OpenSSL
   module SSL
     class SSLContext
       DEFAULT_CERT_STORE = OpenSSL::X509::Store.new
       # If the verify_mode is not VERIFY_NONE and ca_file, ca_path and
       # cert_store are not set then the system default certificate store is
       # used.
       def set_params(params={})
         params = DEFAULT_PARAMS.merge(params)
         params.each{|name, value| self.__send__("#{name}=", value) }
         if self.verify_mode != OpenSSL::SSL::VERIFY_NONE
           unless self.ca_file or self.ca_path or self.cert_store
             self.cert_store = DEFAULT_CERT_STORE
           end
         end
         return params
       end
     end
   end
 end

= System's certs
 # enscript ruby
 module ActiveMerchant
   class Connection
     def configure_ssl(http)
       return unless endpoint.scheme == "https"
       http.use_ssl = true
       if verify_peer
         http.verify_mode = OpenSSL::SSL::VERIFY_PEER
         http.ca_path = nil
         http.ca_file = nil
       else
         http.verify_mode = OpenSSL::SSL::VERIFY_NONE
       end
     end
   end
 end

= Anyway
= Remember what we trust

= What are coming?
= 2016-06-01
= Symantec certs on Google products?

= Will there be updates?
= On Ubuntu
* :
* 2013-01-19
* 2013-06-10
* 2013-09-06
* 2014-03-25
* 2014-10-19
* 2015-04-26 ((-((<launchpad - ca-certificates|URL:https://launchpad.net/ubuntu/+source/ca-certificates/+changelog>))-))

= On ActiveMerchant
* 2007-03-03
* 2011-09-15
* 2015-01-16 ((-((<activemerchant - active_merchant|URL:https://github.com/activemerchant/active_merchant/commits/master/lib/certs/cacert.pem>))-))

= CA certificates
* 2014-09 1024 bit hash
* 2015-09 SHA-1
* 2016-06?

= Be prepared!

= Once more
= www.hyuki.com/cr/

  # image
  # src = hyuki-cr3.jpg
  # relative_width = 100

= CRL
= Certificate revocation list

= PCI
= Disabling SSL and TLS1.0

= URLs
* ((<暗号技術入門|URL:https:/www.hyuki.com/cr/>))
* ((<Phasing out Certificates with 1024-bit RSA Keys|URL:https://blog.mozilla.org/security/2014/09/08/phasing-out-certificates-with-1024-bit-rsa-keys/>))
* ((<SHA-1|URL:https://ja.wikipedia.org/wiki/SHA-1>))
* ((<AWS to Switch to SHA256 Hash Algorithm for SSL Certificates|URL:https://aws.amazon.com/security/security-bulletins/aws-to-switch-to-sha256-hash-algorithm-for-ssl-certificates/>))
* ((<Sustaining Digital Certificate Security|URL:https://googleonlinesecurity.blogspot.com/2015/10/sustaining-digital-certificate-security.html>))
