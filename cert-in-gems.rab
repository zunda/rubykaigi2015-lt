= Do you trust that certificate?

# : subtitle
#    SUBTITLE
#: author
#   zunda
#: institution
#   Heroku/Support
# : content-source
#    RubyKaigi 2015
#: date
#   2015-12-12
: allotted-time
   5m
: theme
   lightning-talk-with-code

= @zundan
  # image
  # src = anmitsu.jpg
  # relative_height = 100

= Important!

  # image
  # src = hyuki-cr3.jpg
  # relative_width = 100

= Transport Layer Security
= Secure Socket Layer
= TLS/SSL
= https://

= Your web application
= Receive requests
= Call external resources

= PKI
= Server certificate
= Certificate Authority
= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 AddTrust External CA Root

= One day
= Error
= Error
SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify

= I did not change anything!
= but
= External resources changed
= Error
SSL_connect returned=1 errno=0 state=SSLv3 read server certificate B: certificate verify

= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 ??? AddTrust External CA Root

= 2014-09 1024 bit hash
= 2015-09 SHA-1
= Replacing with new certs
= On new CA certs
= that
= the app does not know
= Certificate chain
 ssl.zunda.ninja
  |
 COMODO RSA Validation Secure Server CA
  |
 COMODO RSA Certification Authority
  |
 ??? AddTrust External CA Root

= So ...
= $ bundle update
= well ...
= Monkey patch
= net/http
  # enscript ruby
  module Net
    class HTTP
      alias_method :original_use_ssl=, :use_ssl=
  
      def use_ssl=(flag)
        self.ca_file     = File.dirname(__FILE__) + \
          '/../../certs/cacert.pem'
        self.verify_mode = OpenSSL::SSL::VERIFY_PEER
        self.original_use_ssl = flag
      end
    end
  end

= ActiveMerchant
 # enscript ruby
 module ActiveMerchant
   class Connection
     def configure_ssl(http)
       return unless endpoint.scheme == "https"
 
       http.use_ssl = true
 
       if verify_peer
         http.verify_mode = OpenSSL::SSL::VERIFY_PEER
         http.ca_file     = File.dirname(__FILE__) + \
           '/../../certs/cacert.pem'
       else
         http.verify_mode = OpenSSL::SSL::VERIFY_NONE
       end
     end
   end
 end

= ActiveMerchant
  # enscript ruby
  module ActiveMerchant
    class Connection
      def configure_ssl(http)
        return unless endpoint.scheme == "https"

        http.use_ssl = true

        if verify_peer
          http.verify_mode = OpenSSL::SSL::VERIFY_PEER
          http.ca_file     = TODO # DEFAULT PATH
        else
          http.verify_mode = OpenSSL::SSL::VERIFY_NONE
        end
      end
    end
  end

= Remember what we trust

= What is coming?
= Update of ca_certificates on Ubuntu
= Update of certs on ActiveMerchant
= Schedule from Google
= Time line

= www.hyuki.com/cr/

  # image
  # src = hyuki-cr3.jpg
  # relative_width = 100

= CRL
= Certificate revocation list

= httpclient
nahi/httpclient#230
